@using Tuva.On.Line.Models
@model RegisterViewModel

<div class="register-box">
    <h3 style="text-align:center">Admin.Tuva.On.Line</h3>
    <div class="register-box-body">
        <p class="login-box-msg">Регистрация нового пользователя</p>
        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.UserFam, new { @class = "form-control", placeholder = "Фамилия пользователя" })
                <span class="glyphicon glyphicon-user form-control-feedback"></span>
                @Html.ValidationMessageFor(m => m.UserFam, "", new { @class = "text-danger" })
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.UserIm, new { @class = "form-control", placeholder = "Имя пользователя" })
                <span class="glyphicon glyphicon-user form-control-feedback"></span>
                @Html.ValidationMessageFor(m => m.UserIm, "", new { @class = "text-danger" })
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.UserOt, new { @class = "form-control", placeholder = "Отчество пользователя" })
                <span class="glyphicon glyphicon-user form-control-feedback"></span>
                @Html.ValidationMessageFor(m => m.UserOt, "", new { @class = "text-danger" })
            </div>
            //if (User.IsInRole("Администратор ОУЗ"))
            //{
                <div class="form-group has-feedback">
                    <select class="form-control" id="orgPk">
                        <option></option>
                    </select>
                    @*@Html.TextBoxFor(m => m.branchPk, new { @class = "form-control", placeholder = "Организация" })*@
                    <span class="glyphicon glyphicon-home form-control-feedback"></span>
                    @*@Html.ValidationMessageFor(m => m.branchPk, "", new { @class = "text-danger" })*@
                </div>
            //}
            @*<div class="form-group has-feedback">
                    @Html.TextBoxFor(m => m.branchPk, new { @class = "form-control", placeholder = "Организация" })
                    <span class="glyphicon glyphicon-home form-control-feedback"></span>
                    @Html.ValidationMessageFor(m => m.branchPk, "", new { @class = "text-danger" })
                </div>*@
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.UserPhoto, new { @class = "form-control", placeholder = "Логин" })
                <span class="glyphicon glyphicon-eye-open form-control-feedback"></span>
                @Html.ValidationMessageFor(m => m.UserPhoto, "", new { @class = "text-danger" })
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", placeholder = "Логин" })
                <span class="glyphicon glyphicon-eye-open form-control-feedback"></span>
                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group has-feedback">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Пароль" })
                <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
            <div class="form-group has-feedback">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Подтверждение пароля" })
                <span class="glyphicon glyphicon-log-in form-control-feedback"></span>
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
            <div class="row">
                <div class="col-xs-6">
                    @*<div class="checkbox icheck">
                            <label>
                                <input type="checkbox"> I agree to the <a href="#">terms</a>
                            </label>
                        </div>*@
                </div><!-- /.col -->
                <div class="col-xs-6">
                    <button type="submit" class="btn btn-primary btn-block btn-flat">Зарегистрировать</button>
                </div><!-- /.col -->
            </div>
        }
        @*<div class="social-auth-links text-center">
                <p>- OR -</p>
                <a href="#" class="btn btn-block btn-social btn-facebook btn-flat"><i class="fa fa-facebook"></i> Sign up using Facebook</a>
                <a href="#" class="btn btn-block btn-social btn-google-plus btn-flat"><i class="fa fa-google-plus"></i> Sign up using Google+</a>
            </div>*@
    </div><!-- /.form-box -->
</div><!-- /.register-box -->
@*@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Создайте новую учетную запись.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Регистрация" />
            </div>
        </div>
    }*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    document.getElementById("UserFam").focus();
</script>